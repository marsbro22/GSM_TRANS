

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Sep 13 15:19:49 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 22/03/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     008F                     	;# 
    92     0090                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0093                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0095                     	;# 
   100     0096                     	;# 
   101     0097                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     0105                     	;# 
   111     0107                     	;# 
   112     0108                     	;# 
   113     0109                     	;# 
   114     010C                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     0185                     	;# 
   120     0187                     	;# 
   121     0188                     	;# 
   122     0189                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     nosup@@$_$_CONFIG	set	0	;# 
   126     0000                     	;# 
   127     0001                     	;# 
   128     0002                     	;# 
   129     0003                     	;# 
   130     0004                     	;# 
   131     0005                     	;# 
   132     0006                     	;# 
   133     0007                     	;# 
   134     0008                     	;# 
   135     0009                     	;# 
   136     000A                     	;# 
   137     000B                     	;# 
   138     000C                     	;# 
   139     000D                     	;# 
   140     000E                     	;# 
   141     000E                     	;# 
   142     000F                     	;# 
   143     0010                     	;# 
   144     0011                     	;# 
   145     0012                     	;# 
   146     0013                     	;# 
   147     0014                     	;# 
   148     0015                     	;# 
   149     0015                     	;# 
   150     0016                     	;# 
   151     0017                     	;# 
   152     0018                     	;# 
   153     0019                     	;# 
   154     001A                     	;# 
   155     001B                     	;# 
   156     001B                     	;# 
   157     001C                     	;# 
   158     001D                     	;# 
   159     001E                     	;# 
   160     001F                     	;# 
   161     0081                     	;# 
   162     0085                     	;# 
   163     0086                     	;# 
   164     0087                     	;# 
   165     0088                     	;# 
   166     0089                     	;# 
   167     008C                     	;# 
   168     008D                     	;# 
   169     008E                     	;# 
   170     008F                     	;# 
   171     0090                     	;# 
   172     0091                     	;# 
   173     0092                     	;# 
   174     0093                     	;# 
   175     0093                     	;# 
   176     0093                     	;# 
   177     0094                     	;# 
   178     0095                     	;# 
   179     0096                     	;# 
   180     0097                     	;# 
   181     0098                     	;# 
   182     0099                     	;# 
   183     009A                     	;# 
   184     009B                     	;# 
   185     009C                     	;# 
   186     009D                     	;# 
   187     009E                     	;# 
   188     009F                     	;# 
   189     0105                     	;# 
   190     0107                     	;# 
   191     0108                     	;# 
   192     0109                     	;# 
   193     010C                     	;# 
   194     010C                     	;# 
   195     010D                     	;# 
   196     010E                     	;# 
   197     010F                     	;# 
   198     0185                     	;# 
   199     0187                     	;# 
   200     0188                     	;# 
   201     0189                     	;# 
   202     018C                     	;# 
   203     018D                     	;# 
   204     0018                     _RCSTA	set	24
   205     0007                     _PORTC	set	7
   206     0019                     _TXREG	set	25
   207     0064                     _TXIF	set	100
   208     0099                     _SPBRG	set	153
   209     0098                     _TXSTA	set	152
   210     0087                     _TRISC	set	135
   211     0189                     _ANSELH	set	393
   212     0188                     _ANSEL	set	392
   213                           
   214                           	psect	strings
   215     0003                     __pstrings:
   216     0003                     stringtab:
   217     0003                     __stringtab:
   218     0003                     stringcode:	
   219                           ;	String table - string pointers are 1 byte each
   220                           
   221     0003                     stringdir:
   222     0003  3000               	movlw	high stringdir
   223     0004  008A               	movwf	10
   224     0005  0804               	movf	4,w
   225     0006  0A84               	incf	4,f
   226     0007  0782               	addwf	2,f
   227     0008                     __stringbase:
   228     0008  3400               	retlw	0
   229     0009                     __end_of__stringtab:
   230     0009                     STR_3:
   231     0009  3441               	retlw	65	;'A'
   232     000A  3454               	retlw	84	;'T'
   233     000B  342B               	retlw	43	;'+'
   234     000C  3443               	retlw	67	;'C'
   235     000D  344D               	retlw	77	;'M'
   236     000E  3447               	retlw	71	;'G'
   237     000F  3453               	retlw	83	;'S'
   238     0010  343D               	retlw	61	;'='
   239     0011  3422               	retlw	34	;'"'
   240     0012  342B               	retlw	43	;'+'
   241     0013  3439               	retlw	57	;'9'
   242     0014  3431               	retlw	49	;'1'
   243     0015  3458               	retlw	88	;'X'
   244     0016  3458               	retlw	88	;'X'
   245     0017  3458               	retlw	88	;'X'
   246     0018  3458               	retlw	88	;'X'
   247     0019  3458               	retlw	88	;'X'
   248     001A  3458               	retlw	88	;'X'
   249     001B  3458               	retlw	88	;'X'
   250     001C  3458               	retlw	88	;'X'
   251     001D  3458               	retlw	88	;'X'
   252     001E  3458               	retlw	88	;'X'
   253     001F  3422               	retlw	34	;'"'
   254     0020  3400               	retlw	0
   255     0021                     STR_4:
   256     0021  344F               	retlw	79	;'O'
   257     0022  3462               	retlw	98	;'b'
   258     0023  346A               	retlw	106	;'j'
   259     0024  3465               	retlw	101	;'e'
   260     0025  3463               	retlw	99	;'c'
   261     0026  3474               	retlw	116	;'t'
   262     0027  3420               	retlw	32	;' '
   263     0028  3464               	retlw	100	;'d'
   264     0029  3465               	retlw	101	;'e'
   265     002A  3474               	retlw	116	;'t'
   266     002B  3465               	retlw	101	;'e'
   267     002C  3463               	retlw	99	;'c'
   268     002D  3474               	retlw	116	;'t'
   269     002E  3465               	retlw	101	;'e'
   270     002F  3464               	retlw	100	;'d'
   271     0030  3400               	retlw	0
   272     0031                     STR_2:
   273     0031  3441               	retlw	65	;'A'
   274     0032  3454               	retlw	84	;'T'
   275     0033  342B               	retlw	43	;'+'
   276     0034  3443               	retlw	67	;'C'
   277     0035  344D               	retlw	77	;'M'
   278     0036  3447               	retlw	71	;'G'
   279     0037  3446               	retlw	70	;'F'
   280     0038  343D               	retlw	61	;'='
   281     0039  3431               	retlw	49	;'1'
   282     003A  3400               	retlw	0
   283     003B                     STR_1:
   284     003B  3441               	retlw	65	;'A'
   285     003C  3454               	retlw	84	;'T'
   286     003D  3400               	retlw	0
   287                           
   288                           	psect	cinit
   289     07FC                     start_initialization:	
   290                           ; #config settings
   291                           
   292     07FC                     __initialization:
   293     07FC                     end_of_initialization:	
   294                           ;End of C runtime variable initialization code
   295                           
   296     07FC                     __end_of__initialization:
   297     07FC  0183               	clrf	3
   298     07FD  120A  118A  2F72   	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	cstackCOMMON
   301     0070                     __pcstackCOMMON:
   302     0070                     ?_delay:
   303     0070                     ?_txs:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ??_txs:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_txc:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ??_txc:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ?_main:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     txs@p:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     txc@c:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     delay@t:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 2 bytes @ 0x0
   329     0070                     	ds	2
   330     0072                     ??_delay:
   331     0072                     ??_main:	
   332                           ; 1 bytes @ 0x2
   333                           
   334                           
   335                           	psect	maintext
   336     0772                     __pmaintext:	
   337                           ; 1 bytes @ 0x2
   338 ;;
   339 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   340 ;;
   341 ;; *************** function _main *****************
   342 ;; Defined at:
   343 ;;		line 24 in file "GSM_TRANSMIT.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   352 ;; Tracked objects:
   353 ;;		On entry : B00/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   357 ;;      Params:         0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0
   360 ;;      Totals:         0       0       0       0       0
   361 ;;Total ram usage:        0 bytes
   362 ;; Hardware stack levels required when called: 2
   363 ;; This function calls:
   364 ;;		_delay
   365 ;;		_txc
   366 ;;		_txs
   367 ;; This function is called by:
   368 ;;		Startup code after reset
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372     0772                     _main:	
   373                           ;psect for function _main
   374                           
   375     0772                     l717:	
   376                           ;incstack = 0
   377                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   378                           
   379                           
   380                           ;GSM_TRANSMIT.c: 26:  PORTC=0X00;
   381     0772  1283               	bcf	3,5	;RP0=0, select bank0
   382     0773  1303               	bcf	3,6	;RP1=0, select bank0
   383     0774  0187               	clrf	7	;volatile
   384     0775                     l719:
   385                           
   386                           ;GSM_TRANSMIT.c: 27:  TRISC=0X80;
   387     0775  3080               	movlw	128
   388     0776  1683               	bsf	3,5	;RP0=1, select bank1
   389     0777  1303               	bcf	3,6	;RP1=0, select bank1
   390     0778  0087               	movwf	7	;volatile
   391     0779                     l721:
   392                           
   393                           ;GSM_TRANSMIT.c: 28:  ANSEL=0X00;
   394     0779  1683               	bsf	3,5	;RP0=1, select bank3
   395     077A  1703               	bsf	3,6	;RP1=1, select bank3
   396     077B  0188               	clrf	8	;volatile
   397     077C                     l723:
   398                           
   399                           ;GSM_TRANSMIT.c: 29:  ANSELH=0X00;
   400     077C  0189               	clrf	9	;volatile
   401     077D                     l725:
   402                           
   403                           ;GSM_TRANSMIT.c: 30:  TXSTA=0x24;
   404     077D  3024               	movlw	36
   405     077E  1683               	bsf	3,5	;RP0=1, select bank1
   406     077F  1303               	bcf	3,6	;RP1=0, select bank1
   407     0780  0098               	movwf	24	;volatile
   408     0781                     l727:
   409                           
   410                           ;GSM_TRANSMIT.c: 31:  RCSTA=0x90;
   411     0781  3090               	movlw	144
   412     0782  1283               	bcf	3,5	;RP0=0, select bank0
   413     0783  1303               	bcf	3,6	;RP1=0, select bank0
   414     0784  0098               	movwf	24	;volatile
   415     0785                     l729:
   416                           
   417                           ;GSM_TRANSMIT.c: 32:  SPBRG=25;
   418     0785  3019               	movlw	25
   419     0786  1683               	bsf	3,5	;RP0=1, select bank1
   420     0787  1303               	bcf	3,6	;RP1=0, select bank1
   421     0788  0099               	movwf	25	;volatile
   422     0789                     l731:
   423                           
   424                           ;GSM_TRANSMIT.c: 34:  {;GSM_TRANSMIT.c: 35:   txs("AT");
   425     0789  3033               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   426     078A  120A  118A  2750  120A  118A  	fcall	_txs
   427     078F                     l733:
   428                           
   429                           ;GSM_TRANSMIT.c: 36:   txc(0x0d);
   430     078F  300D               	movlw	13
   431     0790  120A  118A  2736  120A  118A  	fcall	_txc
   432     0795                     l735:
   433                           
   434                           ;GSM_TRANSMIT.c: 37:   txc(0x0A);
   435     0795  300A               	movlw	10
   436     0796  120A  118A  2736  120A  118A  	fcall	_txc
   437     079B                     l737:
   438                           
   439                           ;GSM_TRANSMIT.c: 40:   txs("AT+CMGF=1");
   440     079B  3029               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   441     079C  120A  118A  2750  120A  118A  	fcall	_txs
   442     07A1                     l739:
   443                           
   444                           ;GSM_TRANSMIT.c: 41:   txc(0x0d);
   445     07A1  300D               	movlw	13
   446     07A2  120A  118A  2736  120A  118A  	fcall	_txc
   447     07A7                     l741:
   448                           
   449                           ;GSM_TRANSMIT.c: 42:   txc(0x0A);
   450     07A7  300A               	movlw	10
   451     07A8  120A  118A  2736  120A  118A  	fcall	_txc
   452     07AD                     l743:
   453                           
   454                           ;GSM_TRANSMIT.c: 43:   delay(10000);
   455     07AD  3010               	movlw	16
   456     07AE  00F0               	movwf	delay@t
   457     07AF  3027               	movlw	39
   458     07B0  00F1               	movwf	delay@t+1
   459     07B1  120A  118A  2741  120A  118A  	fcall	_delay
   460     07B6                     l745:
   461                           
   462                           ;GSM_TRANSMIT.c: 45:   txs("AT+CMGS=\"+91XXXXXXXXXX\"");
   463     07B6  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   464     07B7  120A  118A  2750  120A  118A  	fcall	_txs
   465     07BC                     l747:
   466                           
   467                           ;GSM_TRANSMIT.c: 46:   txc(0x0d);
   468     07BC  300D               	movlw	13
   469     07BD  120A  118A  2736  120A  118A  	fcall	_txc
   470     07C2                     l749:
   471                           
   472                           ;GSM_TRANSMIT.c: 47:   txc(0x0A);
   473     07C2  300A               	movlw	10
   474     07C3  120A  118A  2736  120A  118A  	fcall	_txc
   475     07C8                     l751:
   476                           
   477                           ;GSM_TRANSMIT.c: 48:   delay(10000);
   478     07C8  3010               	movlw	16
   479     07C9  00F0               	movwf	delay@t
   480     07CA  3027               	movlw	39
   481     07CB  00F1               	movwf	delay@t+1
   482     07CC  120A  118A  2741  120A  118A  	fcall	_delay
   483     07D1                     l753:
   484                           
   485                           ;GSM_TRANSMIT.c: 50:   txs("Object detected");
   486     07D1  3019               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   487     07D2  120A  118A  2750  120A  118A  	fcall	_txs
   488     07D7                     l755:
   489                           
   490                           ;GSM_TRANSMIT.c: 51:   txc(0x1A);
   491     07D7  301A               	movlw	26
   492     07D8  120A  118A  2736  120A  118A  	fcall	_txc
   493     07DD                     l757:
   494                           
   495                           ;GSM_TRANSMIT.c: 52:   txc(0x0d);
   496     07DD  300D               	movlw	13
   497     07DE  120A  118A  2736  120A  118A  	fcall	_txc
   498     07E3                     l759:
   499                           
   500                           ;GSM_TRANSMIT.c: 53:   txc(0x0A);
   501     07E3  300A               	movlw	10
   502     07E4  120A  118A  2736  120A  118A  	fcall	_txc
   503     07E9                     l761:
   504                           
   505                           ;GSM_TRANSMIT.c: 54:   txc(0x26);
   506     07E9  3026               	movlw	38
   507     07EA  120A  118A  2736  120A  118A  	fcall	_txc
   508     07EF                     l763:
   509                           
   510                           ;GSM_TRANSMIT.c: 55:   delay(10000);
   511     07EF  3010               	movlw	16
   512     07F0  00F0               	movwf	delay@t
   513     07F1  3027               	movlw	39
   514     07F2  00F1               	movwf	delay@t+1
   515     07F3  120A  118A  2741  120A  118A  	fcall	_delay
   516     07F8  2F89               	goto	l731
   517     07F9  120A  118A  2800   	ljmp	start
   518     07FC                     __end_of_main:
   519                           
   520                           	psect	text1
   521     0750                     __ptext1:	
   522 ;; *************** function _txs *****************
   523 ;; Defined at:
   524 ;;		line 8 in file "GSM_TRANSMIT.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;  p               1    wreg     PTR const unsigned char 
   527 ;;		 -> STR_4(16), STR_3(24), STR_2(10), STR_1(3), 
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  p               1    0[COMMON] PTR const unsigned char 
   530 ;;		 -> STR_4(16), STR_3(24), STR_2(10), STR_1(3), 
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         0       0       0       0       0
   541 ;;      Locals:         1       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0
   543 ;;      Totals:         1       0       0       0       0
   544 ;;Total ram usage:        1 bytes
   545 ;; Hardware stack levels used: 2
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553     0750                     _txs:	
   554                           ;psect for function _txs
   555                           
   556                           
   557                           ;incstack = 0
   558                           ; Regs used in _txs: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   559                           ;txs@p stored from wreg
   560     0750  00F0               	movwf	txs@p
   561     0751                     l707:
   562                           
   563                           ;GSM_TRANSMIT.c: 8: void txs(const char *p);GSM_TRANSMIT.c: 9: {;GSM_TRANSMIT.c: 10:  wh
      +                          ile(*p)
   564     0751  2F65               	goto	l715
   565     0752                     l709:
   566                           
   567                           ;GSM_TRANSMIT.c: 11:  {;GSM_TRANSMIT.c: 12:   TXREG=*p;
   568     0752  0870               	movf	txs@p,w
   569     0753  0084               	movwf	4
   570     0754  120A  118A  2003  120A  118A  	fcall	stringdir
   571     0759  1283               	bcf	3,5	;RP0=0, select bank0
   572     075A  1303               	bcf	3,6	;RP1=0, select bank0
   573     075B  0099               	movwf	25	;volatile
   574     075C                     l29:	
   575                           ;GSM_TRANSMIT.c: 13:   while(TXIF==0);
   576                           
   577     075C  1E0C               	btfss	12,4	;volatile
   578     075D  2F5F               	goto	u61
   579     075E  2F60               	goto	u60
   580     075F                     u61:
   581     075F  2F5C               	goto	l29
   582     0760                     u60:
   583     0760                     l711:
   584                           
   585                           ;GSM_TRANSMIT.c: 14:     p++;
   586     0760  3001               	movlw	1
   587     0761  00FF               	movwf	btemp+1
   588     0762  087F               	movf	btemp+1,w
   589     0763  07F0               	addwf	txs@p,f
   590     0764                     l713:
   591                           
   592                           ;GSM_TRANSMIT.c: 15:     TXIF=0;
   593     0764  120C               	bcf	12,4	;volatile
   594     0765                     l715:
   595                           
   596                           ;GSM_TRANSMIT.c: 10:  while(*p)
   597     0765  0870               	movf	txs@p,w
   598     0766  0084               	movwf	4
   599     0767  120A  118A  2003  120A  118A  	fcall	stringdir
   600     076C  3A00               	xorlw	0
   601     076D  1D03               	skipz
   602     076E  2F70               	goto	u71
   603     076F  2F71               	goto	u70
   604     0770                     u71:
   605     0770  2F52               	goto	l709
   606     0771                     u70:
   607     0771                     l33:
   608     0771  0008               	return
   609     0772                     __end_of_txs:
   610                           
   611                           	psect	text2
   612     0736                     __ptext2:	
   613 ;; *************** function _txc *****************
   614 ;; Defined at:
   615 ;;		line 18 in file "GSM_TRANSMIT.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;  c               1    wreg     const unsigned char 
   618 ;; Auto vars:     Size  Location     Type
   619 ;;  c               1    0[COMMON] const unsigned char 
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         1       0       0       0       0
   631 ;;      Temps:          0       0       0       0       0
   632 ;;      Totals:         1       0       0       0       0
   633 ;;Total ram usage:        1 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642     0736                     _txc:	
   643                           ;psect for function _txc
   644                           
   645                           
   646                           ;incstack = 0
   647                           ; Regs used in _txc: [wreg]
   648                           ;txc@c stored from wreg
   649     0736  00F0               	movwf	txc@c
   650     0737                     l653:
   651                           
   652                           ;GSM_TRANSMIT.c: 18: void txc(const char c);GSM_TRANSMIT.c: 19: {;GSM_TRANSMIT.c: 20:  T
      +                          XREG=c;
   653     0737  0870               	movf	txc@c,w
   654     0738  1283               	bcf	3,5	;RP0=0, select bank0
   655     0739  1303               	bcf	3,6	;RP1=0, select bank0
   656     073A  0099               	movwf	25	;volatile
   657     073B                     l36:	
   658                           ;GSM_TRANSMIT.c: 21:  while(TXIF==0);
   659                           
   660     073B  1E0C               	btfss	12,4	;volatile
   661     073C  2F3E               	goto	u41
   662     073D  2F3F               	goto	u40
   663     073E                     u41:
   664     073E  2F3B               	goto	l36
   665     073F                     u40:
   666     073F                     l38:
   667                           
   668                           ;GSM_TRANSMIT.c: 22:  TXIF=0;
   669     073F  120C               	bcf	12,4	;volatile
   670     0740                     l39:
   671     0740  0008               	return
   672     0741                     __end_of_txc:
   673                           
   674                           	psect	text3
   675     0741                     __ptext3:	
   676 ;; *************** function _delay *****************
   677 ;; Defined at:
   678 ;;		line 4 in file "GSM_TRANSMIT.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  t               2    0[COMMON] unsigned int 
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2, status,0
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   692 ;;      Params:         2       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0
   695 ;;      Totals:         2       0       0       0       0
   696 ;;Total ram usage:        2 bytes
   697 ;; Hardware stack levels used: 1
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705     0741                     _delay:	
   706                           ;psect for function _delay
   707                           
   708     0741                     l703:	
   709                           ;incstack = 0
   710                           ; Regs used in _delay: [wreg+status,2+status,0]
   711                           
   712     0741                     l705:	
   713                           ;GSM_TRANSMIT.c: 4: void delay(unsigned int t);GSM_TRANSMIT.c: 5: {;GSM_TRANSMIT.c: 6:  
      +                          while(t--);
   714                           
   715     0741  3001               	movlw	1
   716     0742  02F0               	subwf	delay@t,f
   717     0743  3000               	movlw	0
   718     0744  1C03               	skipc
   719     0745  03F1               	decf	delay@t+1,f
   720     0746  02F1               	subwf	delay@t+1,f
   721     0747  0A70               	incf	delay@t,w
   722     0748  1D03               	skipz
   723     0749  2F4E               	goto	u51
   724     074A  0A71               	incf	delay@t+1,w
   725     074B  1D03               	btfss	3,2
   726     074C  2F4E               	goto	u51
   727     074D  2F4F               	goto	u50
   728     074E                     u51:
   729     074E  2F41               	goto	l705
   730     074F                     u50:
   731     074F                     l24:
   732     074F  0008               	return
   733     0750                     __end_of_delay:
   734     007E                     btemp	set	126	;btemp
   735     007E                     wtemp0	set	126

Data Sizes:
    Strings     53
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    txs@p	PTR const unsigned char  size(1) Largest target is 24
		 -> STR_4(CODE[16]), STR_3(CODE[24]), STR_2(CODE[10]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     442
                              _delay
                                _txc
                                _txs
 ---------------------------------------------------------------------------------
 (2) _txs                                                  1     1      0     177
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _txc                                                  1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay                                                2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _txc
   _txs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Sep 13 15:19:49 2023

                      pc 0002                       l24 074F                       l33 0771  
                     l36 073B                       l29 075C                       l38 073F  
                     l39 0740                       u40 073F                       u41 073E  
                     u50 074F                       u51 074E                       u60 0760  
                     u61 075F                       u70 0771                       u71 0770  
                     fsr 0004                      l703 0741                      l711 0760  
                    l705 0741                      l713 0764                      l721 0779  
                    l715 0765                      l707 0751                      l731 0789  
                    l723 077C                      l653 0737                      l709 0752  
                    l741 07A7                      l733 078F                      l725 077D  
                    l717 0772                      l751 07C8                      l743 07AD  
                    l735 0795                      l727 0781                      l719 0775  
                    l761 07E9                      l753 07D1                      l745 07B6  
                    l737 079B                      l729 0785                      l763 07EF  
                    l755 07D7                      l747 07BC                      l739 07A1  
                    l757 07DD                      l749 07C2                      l759 07E3  
                    fsr0 0004                      _txc 0736                      _txs 0750  
                   STR_1 003B                     STR_2 0031                     STR_3 0009  
                   STR_4 0021                     ?_txc 0070                     ?_txs 0070  
                   _TXIF 0064                     _main 0772                     btemp 007E  
                   txc@c 0070                     start 0000                     txs@p 0070  
                  ??_txc 0070                    ??_txs 0070         nosup@@$_$_CONFIG 0000  
                  ?_main 0070                    _ANSEL 0188                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTC 0007                    _TRISC 0087  
                  _TXREG 0019                    _TXSTA 0098                    _delay 0741  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0072  
                 ?_delay 0070                   _ANSELH 0189                   delay@t 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_delay 0750  
                ??_delay 0072               __pmaintext 0772               __stringtab 0003  
                __ptext1 0750                  __ptext2 0736                  __ptext3 0741  
   end_of_initialization 07FC      start_initialization 07FC              __end_of_txc 0741  
            __end_of_txs 0772                ___latbits 0002                __pstrings 0003  
            __stringbase 0008       __end_of__stringtab 0009                stringcode 0003  
               stringdir 0003                 stringtab 0003  
